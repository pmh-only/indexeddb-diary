{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nimport colorPicker from '../modules/_colorPicker';\nexport default {\n  name: 'hiliteColor',\n  display: 'submenu',\n  add: function add(core, targetElement) {\n    core.addModule([colorPicker]);\n    var context = core.context;\n    context.hiliteColor = {\n      previewEl: null,\n      colorInput: null,\n      colorList: null\n    };\n    /** set submenu */\n\n    var listDiv = this.setSubmenu(core);\n    context.hiliteColor.colorInput = listDiv.querySelector('._se_color_picker_input');\n    /** add event listeners */\n\n    context.hiliteColor.colorInput.addEventListener('keyup', this.onChangeInput.bind(core));\n    listDiv.querySelector('._se_color_picker_submit').addEventListener('click', this.submit.bind(core));\n    listDiv.querySelector('._se_color_picker_remove').addEventListener('click', this.remove.bind(core));\n    listDiv.addEventListener('click', this.pickup.bind(core));\n    context.hiliteColor.colorList = listDiv.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null;\n  },\n  setSubmenu: function setSubmenu(core) {\n    var colorArea = core.context.colorPicker.colorListHTML;\n    var listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer';\n    listDiv.innerHTML = colorArea;\n    return listDiv;\n  },\n\n  /**\r\n  * @Override submenu\r\n  */\n  on: function on() {\n    var contextPicker = this.context.colorPicker;\n    var contextHiliteColor = this.context.hiliteColor;\n    contextPicker._colorInput = contextHiliteColor.colorInput;\n    var color = this.wwComputedStyle.backgroundColor;\n    contextPicker._defaultColor = color ? this.plugins.colorPicker.isHexColor(color) ? color : this.plugins.colorPicker.rgb2hex(color) : \"#ffffff\";\n    contextPicker._styleProperty = 'backgroundColor';\n    contextPicker._colorList = contextHiliteColor.colorList;\n    this.plugins.colorPicker.init.call(this, this.getSelectionNode(), null);\n  },\n\n  /**\r\n  * @Override _colorPicker\r\n  */\n  onChangeInput: function onChangeInput(e) {\n    this.plugins.colorPicker.setCurrentColor.call(this, e.target.value);\n  },\n  submit: function submit() {\n    this.plugins.hiliteColor.applyColor.call(this, this.context.colorPicker._currentColor);\n  },\n  pickup: function pickup(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.plugins.hiliteColor.applyColor.call(this, e.target.getAttribute('data-value'));\n  },\n  remove: function remove() {\n    this.nodeChange(null, ['background-color'], ['span'], true);\n    this.submenuOff();\n  },\n  applyColor: function applyColor(color) {\n    if (!color) return;\n    var newNode = this.util.createElement('SPAN');\n    newNode.style.backgroundColor = color;\n    this.nodeChange(newNode, ['background-color'], null, null);\n    this.submenuOff();\n  }\n};","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/submenu/hiliteColor.js"],"names":["colorPicker","name","display","add","core","targetElement","addModule","context","hiliteColor","previewEl","colorInput","colorList","listDiv","setSubmenu","querySelector","addEventListener","onChangeInput","bind","submit","remove","pickup","querySelectorAll","initMenuTarget","colorArea","colorListHTML","util","createElement","className","innerHTML","on","contextPicker","contextHiliteColor","_colorInput","color","wwComputedStyle","backgroundColor","_defaultColor","plugins","isHexColor","rgb2hex","_styleProperty","_colorList","init","call","getSelectionNode","e","setCurrentColor","target","value","applyColor","_currentColor","preventDefault","stopPropagation","getAttribute","nodeChange","submenuOff","newNode","style"],"mappings":"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","sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport colorPicker from '../modules/_colorPicker';\r\n\r\nexport default {\r\n    name: 'hiliteColor',\r\n    display: 'submenu',\r\n    add: function (core, targetElement) {\r\n        core.addModule([colorPicker]);\r\n\r\n        const context = core.context;\r\n        context.hiliteColor = {\r\n            previewEl: null,\r\n            colorInput: null,\r\n            colorList: null\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = this.setSubmenu(core);\r\n        context.hiliteColor.colorInput = listDiv.querySelector('._se_color_picker_input');\r\n\r\n        /** add event listeners */\r\n        context.hiliteColor.colorInput.addEventListener('keyup', this.onChangeInput.bind(core));\r\n        listDiv.querySelector('._se_color_picker_submit').addEventListener('click', this.submit.bind(core));\r\n        listDiv.querySelector('._se_color_picker_remove').addEventListener('click', this.remove.bind(core));\r\n        listDiv.addEventListener('click', this.pickup.bind(core));\r\n\r\n        context.hiliteColor.colorList = listDiv.querySelectorAll('li button');\r\n\r\n        /** append target button menu */\r\n        core.initMenuTarget(this.name, targetElement, listDiv);\r\n\r\n        /** empty memory */\r\n        listDiv = null;\r\n    },\r\n\r\n    setSubmenu: function (core) {\r\n        const colorArea = core.context.colorPicker.colorListHTML;\r\n        const listDiv = core.util.createElement('DIV');\r\n\r\n        listDiv.className = 'se-submenu se-list-layer';\r\n        listDiv.innerHTML = colorArea;\r\n\r\n        return listDiv;\r\n    },\r\n\r\n     /**\r\n     * @Override submenu\r\n     */\r\n    on: function () {\r\n        const contextPicker = this.context.colorPicker;\r\n        const contextHiliteColor = this.context.hiliteColor;\r\n\r\n        contextPicker._colorInput = contextHiliteColor.colorInput;\r\n        const color = this.wwComputedStyle.backgroundColor;\r\n        contextPicker._defaultColor = color ? this.plugins.colorPicker.isHexColor(color) ? color : this.plugins.colorPicker.rgb2hex(color) : \"#ffffff\";\r\n        contextPicker._styleProperty = 'backgroundColor';\r\n        contextPicker._colorList = contextHiliteColor.colorList;\r\n        \r\n        this.plugins.colorPicker.init.call(this, this.getSelectionNode(), null);\r\n    },\r\n\r\n     /**\r\n     * @Override _colorPicker\r\n     */\r\n    onChangeInput: function (e) {\r\n        this.plugins.colorPicker.setCurrentColor.call(this, e.target.value);\r\n    },\r\n\r\n    submit: function () {\r\n        this.plugins.hiliteColor.applyColor.call(this, this.context.colorPicker._currentColor);\r\n    },\r\n\r\n    pickup: function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.plugins.hiliteColor.applyColor.call(this, e.target.getAttribute('data-value'));\r\n    },\r\n\r\n    remove: function () {\r\n        this.nodeChange(null, ['background-color'], ['span'], true);\r\n        this.submenuOff();\r\n    },\r\n\r\n    applyColor: function (color) {\r\n        if (!color) return;\r\n        \r\n        const newNode = this.util.createElement('SPAN');\r\n        newNode.style.backgroundColor = color;\r\n        this.nodeChange(newNode, ['background-color'], null, null);\r\n        \r\n        this.submenuOff();\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}