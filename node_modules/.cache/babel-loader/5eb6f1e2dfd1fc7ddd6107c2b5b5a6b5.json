{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'paragraphStyle',\n  display: 'submenu',\n  add: function add(core, targetElement) {\n    var context = core.context;\n    context.paragraphStyle = {\n      _classList: null\n    };\n    /** set submenu */\n\n    var listDiv = this.setSubmenu(core);\n    /** add event listeners */\n\n    listDiv.querySelector('ul').addEventListener('click', this.pickUp.bind(core));\n    context.paragraphStyle._classList = listDiv.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null;\n  },\n  setSubmenu: function setSubmenu(core) {\n    var option = core.options;\n    var listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer se-list-format';\n    var menuLang = core.lang.menu;\n    var defaultList = {\n      spaced: {\n        name: menuLang.spaced,\n        class: '__se__p-spaced',\n        _class: ''\n      },\n      bordered: {\n        name: menuLang.bordered,\n        class: '__se__p-bordered',\n        _class: ''\n      },\n      neon: {\n        name: menuLang.neon,\n        class: '__se__p-neon',\n        _class: ''\n      }\n    };\n    var paragraphStyles = !option.paragraphStyles || option.paragraphStyles.length === 0 ? ['spaced', 'bordered', 'neon'] : option.paragraphStyles;\n    var list = '<div class=\"se-list-inner\"><ul class=\"se-list-basic\">';\n\n    for (var i = 0, len = paragraphStyles.length, p, name, attrs, _class; i < len; i++) {\n      p = paragraphStyles[i];\n\n      if (typeof p === 'string') {\n        var defaultStyle = defaultList[p.toLowerCase()];\n        if (!defaultStyle) continue;\n        p = defaultStyle;\n      }\n\n      name = p.name;\n      attrs = p.class ? ' class=\"' + p.class + '\"' : '';\n      _class = p._class;\n      list += '<li>' + '<button type=\"button\" class=\"se-btn-list' + (_class ? ' ' + _class : '') + '\" data-value=\"' + p.class + '\" title=\"' + name + '\">' + '<div' + attrs + '>' + name + '</div>' + '</button></li>';\n    }\n\n    list += '</ul></div>';\n    listDiv.innerHTML = list;\n    return listDiv;\n  },\n\n  /**\n  * @Override submenu\n  */\n  on: function on() {\n    var paragraphContext = this.context.paragraphStyle;\n    var paragraphList = paragraphContext._classList;\n    var currentFormat = this.util.getFormatElement(this.getSelectionNode());\n\n    for (var i = 0, len = paragraphList.length; i < len; i++) {\n      if (this.util.hasClass(currentFormat, paragraphList[i].getAttribute('data-value'))) {\n        this.util.addClass(paragraphList[i], 'active');\n      } else {\n        this.util.removeClass(paragraphList[i], 'active');\n      }\n    }\n  },\n  pickUp: function pickUp(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var target = e.target;\n    var value = null;\n\n    while (!/^UL$/i.test(target.tagName)) {\n      value = target.getAttribute('data-value');\n      if (value) break;\n      target = target.parentNode;\n    }\n\n    if (!value) return;\n    var selectedFormsts = this.getSelectedElements();\n\n    if (selectedFormsts.length === 0) {\n      this.getRange_addLine(this.getRange(), null);\n      selectedFormsts = this.getSelectedElements();\n      if (selectedFormsts.length === 0) return;\n    } // change format class\n\n\n    var toggleClass = this.util.hasClass(target, 'active') ? this.util.removeClass.bind(this.util) : this.util.addClass.bind(this.util);\n\n    for (var i = 0, len = selectedFormsts.length; i < len; i++) {\n      toggleClass(selectedFormsts[i], value);\n    }\n\n    this.submenuOff(); // history stack\n\n    this.history.push(false);\n  }\n};","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/submenu/paragraphStyle.js"],"names":["name","display","add","core","targetElement","context","paragraphStyle","_classList","listDiv","setSubmenu","querySelector","addEventListener","pickUp","bind","querySelectorAll","initMenuTarget","option","options","util","createElement","className","menuLang","lang","menu","defaultList","spaced","class","_class","bordered","neon","paragraphStyles","length","list","i","len","p","attrs","defaultStyle","toLowerCase","innerHTML","on","paragraphContext","paragraphList","currentFormat","getFormatElement","getSelectionNode","hasClass","getAttribute","addClass","removeClass","e","preventDefault","stopPropagation","target","value","test","tagName","parentNode","selectedFormsts","getSelectedElements","getRange_addLine","getRange","toggleClass","submenuOff","history","push"],"mappings":"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","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'paragraphStyle',\n    display: 'submenu',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.paragraphStyle = {\n            _classList: null\n        };\n\n        /** set submenu */\n        let listDiv = this.setSubmenu(core);\n\n        /** add event listeners */\n        listDiv.querySelector('ul').addEventListener('click', this.pickUp.bind(core));\n\n        context.paragraphStyle._classList = listDiv.querySelectorAll('li button');\n\n        /** append target button menu */\n        core.initMenuTarget(this.name, targetElement, listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (core) {\n        const option = core.options;\n        const listDiv = core.util.createElement('DIV');\n        listDiv.className = 'se-submenu se-list-layer se-list-format';\n\n        const menuLang = core.lang.menu;\n        const defaultList = {\n            spaced: {\n                name: menuLang.spaced,\n                class: '__se__p-spaced',\n                _class: ''\n            },\n            bordered: {\n                name: menuLang.bordered,\n                class: '__se__p-bordered',\n                _class: ''\n            },\n            neon: {\n                name: menuLang.neon,\n                class: '__se__p-neon',\n                _class: ''\n            }\n        };\n        const paragraphStyles = !option.paragraphStyles || option.paragraphStyles.length === 0 ? ['spaced', 'bordered', 'neon'] : option.paragraphStyles;\n\n        let list = '<div class=\"se-list-inner\"><ul class=\"se-list-basic\">';\n        for (let i = 0, len = paragraphStyles.length, p, name, attrs, _class; i < len; i++) {\n            p = paragraphStyles[i];\n\n            if (typeof p === 'string') {\n                const defaultStyle = defaultList[p.toLowerCase()];\n                if (!defaultStyle) continue;\n                p = defaultStyle;\n            }\n\n            name = p.name;\n            attrs = p.class ? ' class=\"' + p.class + '\"' : '';\n            _class = p._class;\n\n            list += '<li>' +\n                '<button type=\"button\" class=\"se-btn-list' + (_class ? ' ' + _class: '') + '\" data-value=\"' + p.class + '\" title=\"' + name + '\">' +\n                    '<div' + attrs + '>' + name + '</div>' +\n                '</button></li>';\n        }\n        list += '</ul></div>';\n\n        listDiv.innerHTML = list;\n\n        return listDiv;\n    },\n\n     /**\n     * @Override submenu\n     */\n    on: function () {\n        const paragraphContext = this.context.paragraphStyle;\n        const paragraphList = paragraphContext._classList;\n        const currentFormat = this.util.getFormatElement(this.getSelectionNode());\n\n        for (let i = 0, len = paragraphList.length; i < len; i++) {\n            if (this.util.hasClass(currentFormat, paragraphList[i].getAttribute('data-value'))) {\n                this.util.addClass(paragraphList[i], 'active');\n            } else {\n                this.util.removeClass(paragraphList[i], 'active');\n            }\n        }\n    },\n\n    pickUp: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let value = null;\n        \n        while (!/^UL$/i.test(target.tagName)) {\n            value = target.getAttribute('data-value');\n            if (value) break;\n            target = target.parentNode;\n        }\n\n        if (!value) return;\n\n        let selectedFormsts = this.getSelectedElements();\n        if (selectedFormsts.length === 0) {\n            this.getRange_addLine(this.getRange(), null);\n            selectedFormsts = this.getSelectedElements();\n            if (selectedFormsts.length === 0) return;\n        }\n\n        // change format class\n        const toggleClass = this.util.hasClass(target, 'active') ? this.util.removeClass.bind(this.util) : this.util.addClass.bind(this.util);\n        for (let i = 0, len = selectedFormsts.length; i < len; i++) {\n            toggleClass(selectedFormsts[i], value);\n        }\n\n        this.submenuOff();\n\n        // history stack\n        this.history.push(false);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}