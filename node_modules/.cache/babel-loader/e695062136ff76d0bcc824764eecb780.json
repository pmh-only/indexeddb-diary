{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'textStyle',\n  display: 'submenu',\n  add: function add(core, targetElement) {\n    var context = core.context;\n    context.textStyle = {\n      _styleList: null\n    };\n    /** set submenu */\n\n    var listDiv = this.setSubmenu(core);\n    var listUl = listDiv.querySelector('ul');\n    /** add event listeners */\n\n    listUl.addEventListener('click', this.pickup.bind(core));\n    context.textStyle._styleList = listDiv.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null, listUl = null;\n  },\n  setSubmenu: function setSubmenu(core) {\n    var option = core.options;\n    var listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer se-list-format';\n    var defaultList = {\n      code: {\n        name: core.lang.menu.code,\n        class: '__se__t-code',\n        tag: 'code'\n      },\n      translucent: {\n        name: core.lang.menu.translucent,\n        style: 'opacity: 0.5;',\n        tag: 'span'\n      },\n      shadow: {\n        name: core.lang.menu.shadow,\n        class: '__se__t-shadow',\n        tag: 'span'\n      }\n    };\n    var styleList = !option.textStyles ? core._w.Object.keys(defaultList) : option.textStyles;\n    var list = '<div class=\"se-list-inner\"><ul class=\"se-list-basic\">';\n\n    for (var i = 0, len = styleList.length, t, tag, name, attrs, command, value, _class; i < len; i++) {\n      t = styleList[i];\n      attrs = '', value = '', command = [];\n\n      if (typeof t === 'string') {\n        var defaultStyle = defaultList[t.toLowerCase()];\n        if (!defaultStyle) continue;\n        t = defaultStyle;\n      }\n\n      name = t.name;\n      tag = t.tag || 'span';\n      _class = t._class;\n\n      if (t.style) {\n        attrs += ' style=\"' + t.style + '\"';\n        value += t.style.replace(/:[^;]+(;|$)\\s*/g, ',');\n        command.push('style');\n      }\n\n      if (t.class) {\n        attrs += ' class=\"' + t.class + '\"';\n        value += '.' + t.class.trim().replace(/\\s+/g, ',.');\n        command.push('class');\n      }\n\n      value = value.replace(/,$/, '');\n      list += '<li>' + '<button type=\"button\" class=\"se-btn-list' + (_class ? ' ' + _class : '') + '\" data-command=\"' + tag + '\" data-value=\"' + value + '\" title=\"' + name + '\">' + '<' + tag + attrs + '>' + name + '</' + tag + '>' + '</button></li>';\n    }\n\n    list += '</ul></div>';\n    listDiv.innerHTML = list;\n    return listDiv;\n  },\n\n  /**\n  * @Override submenu\n  */\n  on: function on() {\n    var util = this.util;\n    var textStyleContext = this.context.textStyle;\n    var styleButtonList = textStyleContext._styleList;\n    var selectionNode = this.getSelectionNode();\n\n    for (var i = 0, len = styleButtonList.length, btn, data, active; i < len; i++) {\n      btn = styleButtonList[i];\n      data = btn.getAttribute('data-value').split(',');\n\n      for (var v = 0, node, value; v < data.length; v++) {\n        node = selectionNode;\n        active = false;\n\n        while (node && !util.isFormatElement(node) && !util.isComponent(node)) {\n          if (node.nodeName.toLowerCase() === btn.getAttribute('data-command').toLowerCase()) {\n            value = data[v];\n\n            if (/^\\./.test(value) ? util.hasClass(node, value.replace(/^\\./, '')) : !!node.style[value]) {\n              active = true;\n              break;\n            }\n          }\n\n          node = node.parentNode;\n        }\n\n        if (!active) break;\n      }\n\n      active ? util.addClass(btn, 'active') : util.removeClass(btn, 'active');\n    }\n  },\n  pickup: function pickup(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var target = e.target;\n    var command = null,\n        tag = null;\n\n    while (!command && !/UL/i.test(target.tagName)) {\n      command = target.getAttribute('data-command');\n\n      if (command) {\n        tag = target.firstChild;\n        break;\n      }\n\n      target = target.parentNode;\n    }\n\n    if (!command) return;\n    var checkStyles = tag.style.cssText.replace(/:.+(;|$)/g, ',').split(',');\n    checkStyles.pop();\n    var classes = tag.classList;\n\n    for (var i = 0, len = classes.length; i < len; i++) {\n      checkStyles.push('.' + classes[i]);\n    }\n\n    var newNode = this.util.hasClass(target, 'active') ? null : tag.cloneNode(false);\n    var removeNodes = newNode ? null : [tag.nodeName];\n    this.nodeChange(newNode, checkStyles, removeNodes, true);\n    this.submenuOff();\n  }\n};","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/submenu/textStyle.js"],"names":["name","display","add","core","targetElement","context","textStyle","_styleList","listDiv","setSubmenu","listUl","querySelector","addEventListener","pickup","bind","querySelectorAll","initMenuTarget","option","options","util","createElement","className","defaultList","code","lang","menu","class","tag","translucent","style","shadow","styleList","textStyles","_w","Object","keys","list","i","len","length","t","attrs","command","value","_class","defaultStyle","toLowerCase","replace","push","trim","innerHTML","on","textStyleContext","styleButtonList","selectionNode","getSelectionNode","btn","data","active","getAttribute","split","v","node","isFormatElement","isComponent","nodeName","test","hasClass","parentNode","addClass","removeClass","e","preventDefault","stopPropagation","target","tagName","firstChild","checkStyles","cssText","pop","classes","classList","newNode","cloneNode","removeNodes","nodeChange","submenuOff"],"mappings":"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","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'textStyle',\n    display: 'submenu',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.textStyle = {\n            _styleList: null\n        };\n\n        /** set submenu */\n        let listDiv = this.setSubmenu(core);\n        let listUl = listDiv.querySelector('ul');\n\n        /** add event listeners */\n        listUl.addEventListener('click', this.pickup.bind(core));\n\n        context.textStyle._styleList = listDiv.querySelectorAll('li button');\n\n        /** append target button menu */\n        core.initMenuTarget(this.name, targetElement, listDiv);\n\n        /** empty memory */\n        listDiv = null, listUl = null;\n    },\n\n    setSubmenu: function (core) {\n        const option = core.options;\n        const listDiv = core.util.createElement('DIV');\n        listDiv.className = 'se-submenu se-list-layer se-list-format';\n\n        const defaultList = {\n            code: {\n                name: core.lang.menu.code,\n                class: '__se__t-code',\n                tag: 'code',\n            },\n            translucent: {\n                name: core.lang.menu.translucent,\n                style: 'opacity: 0.5;',\n                tag: 'span',\n            },\n            shadow: {\n                name: core.lang.menu.shadow,\n                class: '__se__t-shadow',\n                tag: 'span',\n            }\n        };\n        const styleList = !option.textStyles ? core._w.Object.keys(defaultList) : option.textStyles;\n\n        let list = '<div class=\"se-list-inner\"><ul class=\"se-list-basic\">';\n        for (let i = 0, len = styleList.length, t, tag, name, attrs, command, value, _class; i < len; i++) {\n            t = styleList[i];\n            attrs = '', value = '', command = [];\n\n            if (typeof t === 'string') {\n                const defaultStyle = defaultList[t.toLowerCase()];\n                if (!defaultStyle) continue;\n                t = defaultStyle;\n            }\n\n            name = t.name;\n            tag = t.tag || 'span';\n            _class = t._class;\n\n            if (t.style) {\n                attrs += ' style=\"' + t.style + '\"';\n                value += t.style.replace(/:[^;]+(;|$)\\s*/g, ',');\n                command.push('style');\n            }\n            if (t.class) {\n                attrs += ' class=\"' + t.class + '\"';\n                value += '.' + t.class.trim().replace(/\\s+/g, ',.');\n                command.push('class');\n            }\n\n            value = value.replace(/,$/, '');\n\n            list += '<li>' +\n                '<button type=\"button\" class=\"se-btn-list' + (_class ? ' ' + _class: '') + '\" data-command=\"' + tag + '\" data-value=\"' + value + '\" title=\"' + name + '\">' +\n                    '<' + tag + attrs + '>' + name +  '</' + tag + '>' +\n                '</button></li>';\n        }\n        list += '</ul></div>';\n\n        listDiv.innerHTML = list;\n\n        return listDiv;\n    },\n\n     /**\n     * @Override submenu\n     */\n    on: function () {\n        const util = this.util;\n        const textStyleContext = this.context.textStyle;\n        const styleButtonList = textStyleContext._styleList;\n        const selectionNode = this.getSelectionNode();\n\n        for (let i = 0, len = styleButtonList.length, btn, data, active; i < len; i++) {\n            btn = styleButtonList[i];\n            data = btn.getAttribute('data-value').split(',');\n            \n            for (let v = 0, node, value; v < data.length; v++) {\n                node = selectionNode;\n                active = false;\n                \n                while (node && !util.isFormatElement(node) && !util.isComponent(node)) {\n                    if (node.nodeName.toLowerCase() === btn.getAttribute('data-command').toLowerCase()) {\n                        value = data[v];\n                        if (/^\\./.test(value) ? util.hasClass(node, value.replace(/^\\./, '')) : !!node.style[value]) {\n                            active = true;\n                            break;\n                        }\n                    }\n                    node = node.parentNode;\n                }\n\n                if (!active) break;\n            }\n\n            active ? util.addClass(btn, 'active') : util.removeClass(btn, 'active');\n        }\n\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = null, tag = null;\n        \n        while (!command && !/UL/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            if (command) {\n                tag = target.firstChild;\n                break;\n            }\n            target = target.parentNode;\n        }\n\n        if (!command) return;\n\n        const checkStyles = tag.style.cssText.replace(/:.+(;|$)/g, ',').split(',');\n        checkStyles.pop();\n\n        const classes = tag.classList;\n        for (let i = 0, len = classes.length; i < len; i++) {\n            checkStyles.push('.' + classes[i]);\n        }\n\n        const newNode = this.util.hasClass(target, 'active') ? null : tag.cloneNode(false);\n        const removeNodes = newNode ? null : [tag.nodeName];\n        this.nodeChange(newNode, checkStyles, removeNodes, true);\n\n        this.submenuOff();\n    }\n};\n"]},"metadata":{},"sourceType":"module"}