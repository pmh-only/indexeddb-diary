{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\n(function (global, factory) {\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error('SUNEDITOR_MODULES a window with a document');\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n})(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n  var fileManager = {\n    name: 'fileManager',\n    _xmlHttp: null,\n    _checkMediaComponent: function _checkMediaComponent(tag) {\n      if (/IMG/i.test(tag)) {\n        return !/FIGURE/i.test(tag.parentElement.nodeName) || !/FIGURE/i.test(tag.parentElement.parentElement.nodeName);\n      } else if (/VIDEO/i.test(tag)) {\n        return !/FIGURE/i.test(tag.parentElement.nodeName);\n      }\n\n      return true;\n    },\n\n    /**\n     * @description Upload the file to the server.\n     * @param {String} uploadUrl Upload server url\n     * @param {Object|null} uploadHeader Request header\n     * @param {FormData} formData FormData in body\n     * @param {Function|null} callBack Success call back function\n     * @param {Function|null} errorCallBack Error call back function\n     * @example this.plugins.fileManager.upload.call(this, imageUploadUrl, this.options.imageUploadHeader, formData, this.plugins.image.callBack_imgUpload.bind(this, info), this.functions.onImageUploadError);\n     */\n    upload: function upload(uploadUrl, uploadHeader, formData, callBack, errorCallBack) {\n      this.showLoading();\n      var filePlugin = this.plugins.fileManager;\n      var xmlHttp = filePlugin._xmlHttp = this.util.getXMLHttpRequest();\n      xmlHttp.onreadystatechange = filePlugin._callBackUpload.bind(this, xmlHttp, callBack, errorCallBack);\n      xmlHttp.open('post', uploadUrl, true);\n\n      if (uploadHeader !== null && typeof uploadHeader === 'object' && this._w.Object.keys(uploadHeader).length > 0) {\n        for (var key in uploadHeader) {\n          xmlHttp.setRequestHeader(key, uploadHeader[key]);\n        }\n      }\n\n      xmlHttp.send(formData);\n    },\n    _callBackUpload: function _callBackUpload(xmlHttp, callBack, errorCallBack) {\n      if (xmlHttp.readyState === 4) {\n        if (xmlHttp.status === 200) {\n          try {\n            callBack(xmlHttp);\n          } catch (e) {\n            throw Error('[SUNEDITOR.fileManager.upload.callBack.fail] cause : \"' + e.message + '\"');\n          } finally {\n            this.closeLoading();\n          }\n        } else {\n          // exception\n          this.closeLoading();\n          var res = !xmlHttp.responseText ? xmlHttp : JSON.parse(xmlHttp.responseText);\n\n          if (typeof errorCallBack !== 'function' || errorCallBack('', res, this)) {\n            var err = '[SUNEDITOR.fileManager.upload.serverException] status: ' + xmlHttp.status + ', response: ' + (res.errorMessage || xmlHttp.responseText);\n            this.functions.noticeOpen(err);\n            throw Error(err);\n          }\n        }\n      }\n    },\n\n    /**\n     * @description Checke the file's information and modify the tag that does not fit the format.\n     * @param {String} pluginName Plugin name\n     * @param {Array} tagNames Tag array to check\n     * @param {Function|null} uploadEventHandler Event handler to process updated file info after checking (used in \"setInfo\")\n     * @param {Function} modifyHandler A function to modify a tag that does not fit the format (Argument value: Tag element)\n     * @param {Boolean} resizing True if the plugin is using a resizing module\n     * @example \n     * const modifyHandler = function (tag) {\n     *      imagePlugin.onModifyMode.call(this, tag, null);\n     *      imagePlugin.openModify.call(this, true);\n     *      imagePlugin.update_image.call(this, true, false, true);\n     *  }.bind(this);\n     *  this.plugins.fileManager.checkInfo.call(this, 'image', ['img'], this.functions.onImageUpload, modifyHandler, true);\n     */\n    checkInfo: function checkInfo(pluginName, tagNames, uploadEventHandler, modifyHandler, resizing) {\n      var tags = [];\n\n      for (var i = 0, len = tagNames.length; i < len; i++) {\n        tags = tags.concat([].slice.call(this.context.element.wysiwyg.getElementsByTagName(tagNames[i])));\n      }\n\n      var fileManagerPlugin = this.plugins.fileManager;\n      var context = this.context[pluginName];\n      var infoList = context._infoList;\n      var setFileInfo = fileManagerPlugin.setInfo.bind(this);\n\n      if (tags.length === infoList.length) {\n        // reset\n        if (this._componentsInfoReset) {\n          for (var _i = 0, _len = tags.length; _i < _len; _i++) {\n            setFileInfo(pluginName, tags[_i], uploadEventHandler, null, resizing);\n          }\n\n          return;\n        } else {\n          var infoUpdate = false;\n\n          var _loop = function _loop(_info, _i2, _len2) {\n            _info = infoList[_i2];\n\n            if (tags.filter(function (t) {\n              info = _info;\n              return _info.src === t.src && _info.index.toString() === t.getAttribute('data-index');\n            }).length === 0) {\n              infoUpdate = true;\n              info = _info;\n              return \"break\";\n            }\n\n            info = _info;\n          };\n\n          for (var _i2 = 0, _len2 = infoList.length, info; _i2 < _len2; _i2++) {\n            var _ret = _loop(info, _i2, _len2);\n\n            if (_ret === \"break\") break;\n          } // pass\n\n\n          if (!infoUpdate) return;\n        }\n      } // check\n\n\n      var _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n\n      if (resizing) this.context.resizing._resize_plugin = pluginName;\n      var currentTags = [];\n      var infoIndex = [];\n\n      for (var _i3 = 0, _len3 = infoList.length; _i3 < _len3; _i3++) {\n        infoIndex[_i3] = infoList[_i3].index;\n      }\n\n      for (var _i4 = 0, _len4 = tags.length, tag; _i4 < _len4; _i4++) {\n        tag = tags[_i4];\n\n        if (!this.util.getParentElement(tag, this.util.isMediaComponent) || !fileManagerPlugin._checkMediaComponent(tag)) {\n          currentTags.push(context._infoIndex);\n          modifyHandler(tag);\n        } else if (!tag.getAttribute('data-index') || infoIndex.indexOf(tag.getAttribute('data-index') * 1) < 0) {\n          currentTags.push(context._infoIndex);\n          tag.removeAttribute('data-index');\n          setFileInfo(pluginName, tag, uploadEventHandler, null, resizing);\n        } else {\n          currentTags.push(tag.getAttribute('data-index') * 1);\n        }\n      }\n\n      for (var _i5 = 0, dataIndex; _i5 < infoList.length; _i5++) {\n        dataIndex = infoList[_i5].index;\n        if (currentTags.indexOf(dataIndex) > -1) continue;\n        infoList.splice(_i5, 1);\n        if (typeof uploadEventHandler === 'function') uploadEventHandler(null, dataIndex, 'delete', null, 0, this);\n        _i5--;\n      }\n\n      if (resizing) this.context.resizing._resize_plugin = _resize_plugin;\n    },\n\n    /**\n     * @description Create info object of file and add it to \"_infoList\" (this.context[pluginName]._infoList[])\n     * @param {String} pluginName Plugin name \n     * @param {Element} element \n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     * @param {Object|null} file \n     * @param {Boolean} resizing True if the plugin is using a resizing module\n     * @example \n     * uploadCallBack {.. file = { name: fileList[i].name, size: fileList[i].size };\n     * this.plugins.fileManager.setInfo.call(this, 'image', oImg, this.functions.onImageUpload, file, true);\n     */\n    setInfo: function setInfo(pluginName, element, uploadEventHandler, file, resizing) {\n      var _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n\n      if (resizing) this.context.resizing._resize_plugin = pluginName;\n      var plguin = this.plugins[pluginName];\n      var context = this.context[pluginName];\n      var infoList = context._infoList;\n      var dataIndex = element.getAttribute('data-index');\n      var info = null;\n      var state = '';\n\n      if (!file) {\n        file = {\n          'name': element.getAttribute('data-file-name') || (typeof element.src === 'string' ? element.src.split('/').pop() : ''),\n          'size': element.getAttribute('data-file-size') || 0\n        };\n      } // create\n\n\n      if (!dataIndex || this._componentsInfoInit) {\n        state = 'create';\n        dataIndex = context._infoIndex++;\n        element.setAttribute('data-index', dataIndex);\n        element.setAttribute('data-file-name', file.name);\n        element.setAttribute('data-file-size', file.size);\n        info = {\n          src: element.src,\n          index: dataIndex * 1,\n          name: file.name,\n          size: file.size\n        };\n        infoList.push(info);\n      } else {\n        // update\n        state = 'update';\n        dataIndex *= 1;\n\n        for (var i = 0, len = infoList.length; i < len; i++) {\n          if (dataIndex === infoList[i].index) {\n            info = infoList[i];\n            break;\n          }\n        }\n\n        if (!info) {\n          dataIndex = context._infoIndex++;\n          info = {\n            index: dataIndex\n          };\n          infoList.push(info);\n        }\n\n        info.src = element.src;\n        info.name = element.getAttribute(\"data-file-name\");\n        info.size = element.getAttribute(\"data-file-size\") * 1;\n      } // method bind\n\n\n      info.element = element;\n      info.delete = plguin.destroy.bind(this, element);\n\n      info.select = function (element) {\n        element.scrollIntoView(true);\n\n        this._w.setTimeout(plguin.select.bind(this, element));\n      }.bind(this, element);\n\n      if (resizing) {\n        if (!element.getAttribute('origin-size') && element.naturalWidth) {\n          element.setAttribute('origin-size', element.naturalWidth + ',' + element.naturalHeight);\n        }\n\n        if (!element.getAttribute('data-origin')) {\n          var container = this.util.getParentElement(element, this.util.isMediaComponent);\n          var cover = this.util.getParentElement(element, 'FIGURE');\n\n          var w = this.plugins.resizing._module_getSizeX.call(this, context, element, cover, container);\n\n          var h = this.plugins.resizing._module_getSizeY.call(this, context, element, cover, container);\n\n          element.setAttribute('data-origin', w + ',' + h);\n          element.setAttribute('data-size', w + ',' + h);\n        }\n\n        if (!element.style.width) {\n          var size = (element.getAttribute('data-size') || element.getAttribute('data-origin') || '').split(',');\n          plguin.onModifyMode.call(this, element, null);\n          plguin.applySize.call(this, size[0], size[1]);\n        }\n\n        this.context.resizing._resize_plugin = _resize_plugin;\n      }\n\n      if (typeof uploadEventHandler === 'function') uploadEventHandler(element, dataIndex, state, info, --context._uploadFileLength < 0 ? 0 : context._uploadFileLength, this);\n    },\n\n    /**\n     * @description Delete info object at \"_infoList\"\n     * @param {String} pluginName Plugin name \n     * @param {Number} index index of info object (this.context[pluginName]._infoList[].index)\n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     */\n    deleteInfo: function deleteInfo(pluginName, index, uploadEventHandler) {\n      if (index >= 0) {\n        var infoList = this.context[pluginName]._infoList;\n\n        for (var i = 0, len = infoList.length; i < len; i++) {\n          if (index === infoList[i].index) {\n            infoList.splice(i, 1);\n            if (typeof uploadEventHandler === 'function') uploadEventHandler(null, index, 'delete', null, 0, this);\n            return;\n          }\n        }\n      }\n    },\n\n    /**\n     * @description Reset info object and \"_infoList = []\", \"_infoIndex = 0\"\n     * @param {String} pluginName Plugin name \n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     */\n    resetInfo: function resetInfo(pluginName, uploadEventHandler) {\n      var context = this.context[pluginName];\n\n      if (typeof uploadEventHandler === 'function') {\n        var infoList = context._infoList;\n\n        for (var i = 0, len = infoList.length; i < len; i++) {\n          uploadEventHandler(null, infoList[i].index, 'delete', null, 0, this);\n        }\n      }\n\n      context._infoList = [];\n      context._infoIndex = 0;\n    }\n  };\n\n  if (typeof noGlobal === typeof undefined) {\n    if (!window.SUNEDITOR_MODULES) {\n      Object.defineProperty(window, 'SUNEDITOR_MODULES', {\n        enumerable: true,\n        writable: false,\n        configurable: false,\n        value: {}\n      });\n    }\n\n    Object.defineProperty(window.SUNEDITOR_MODULES, 'fileManager', {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: fileManager\n    });\n  }\n\n  return fileManager;\n});","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/modules/fileManager.js"],"names":["global","factory","module","exports","document","w","Error","window","noGlobal","fileManager","name","_xmlHttp","_checkMediaComponent","tag","test","parentElement","nodeName","upload","uploadUrl","uploadHeader","formData","callBack","errorCallBack","showLoading","filePlugin","plugins","xmlHttp","util","getXMLHttpRequest","onreadystatechange","_callBackUpload","bind","open","_w","Object","keys","length","key","setRequestHeader","send","readyState","status","e","message","closeLoading","res","responseText","JSON","parse","err","errorMessage","functions","noticeOpen","checkInfo","pluginName","tagNames","uploadEventHandler","modifyHandler","resizing","tags","i","len","concat","slice","call","context","element","wysiwyg","getElementsByTagName","fileManagerPlugin","infoList","_infoList","setFileInfo","setInfo","_componentsInfoReset","infoUpdate","info","filter","t","src","index","toString","getAttribute","_resize_plugin","currentTags","infoIndex","getParentElement","isMediaComponent","push","_infoIndex","indexOf","removeAttribute","dataIndex","splice","file","plguin","state","split","pop","_componentsInfoInit","setAttribute","size","delete","destroy","select","scrollIntoView","setTimeout","naturalWidth","naturalHeight","container","cover","_module_getSizeX","h","_module_getSizeY","style","width","onModifyMode","applySize","_uploadFileLength","deleteInfo","resetInfo","undefined","SUNEDITOR_MODULES","defineProperty","enumerable","writable","configurable","value"],"mappings":"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","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\n(function (global, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = global.document ?\n            factory(global, true) :\n            function (w) {\n                if (!w.document) {\n                    throw new Error('SUNEDITOR_MODULES a window with a document');\n                }\n                return factory(w);\n            };\n    } else {\n        factory(global);\n    }\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    const fileManager = {\n        name: 'fileManager',\n        _xmlHttp: null,\n\n        _checkMediaComponent: function (tag) {\n            if (/IMG/i.test(tag)) {\n                return !/FIGURE/i.test(tag.parentElement.nodeName) || !/FIGURE/i.test(tag.parentElement.parentElement.nodeName);\n            } else if (/VIDEO/i.test(tag)) {\n                return !/FIGURE/i.test(tag.parentElement.nodeName);\n            }\n            return true;\n        },\n\n        /**\n         * @description Upload the file to the server.\n         * @param {String} uploadUrl Upload server url\n         * @param {Object|null} uploadHeader Request header\n         * @param {FormData} formData FormData in body\n         * @param {Function|null} callBack Success call back function\n         * @param {Function|null} errorCallBack Error call back function\n         * @example this.plugins.fileManager.upload.call(this, imageUploadUrl, this.options.imageUploadHeader, formData, this.plugins.image.callBack_imgUpload.bind(this, info), this.functions.onImageUploadError);\n         */\n        upload: function (uploadUrl, uploadHeader, formData, callBack, errorCallBack) {\n            this.showLoading();\n            const filePlugin = this.plugins.fileManager;\n            const xmlHttp = filePlugin._xmlHttp = this.util.getXMLHttpRequest();\n\n            xmlHttp.onreadystatechange = filePlugin._callBackUpload.bind(this, xmlHttp, callBack, errorCallBack);\n            xmlHttp.open('post', uploadUrl, true);\n            if(uploadHeader !== null && typeof uploadHeader === 'object' && this._w.Object.keys(uploadHeader).length > 0){\n                for(let key in uploadHeader){\n                    xmlHttp.setRequestHeader(key, uploadHeader[key]);\n                }\n            }\n            xmlHttp.send(formData);\n        },\n\n        _callBackUpload: function (xmlHttp, callBack, errorCallBack) {\n            if (xmlHttp.readyState === 4) {\n                if (xmlHttp.status === 200) {\n                    try {\n                        callBack(xmlHttp);\n                    } catch (e) {\n                        throw Error('[SUNEDITOR.fileManager.upload.callBack.fail] cause : \"' + e.message + '\"');\n                    } finally {\n                        this.closeLoading();\n                    }\n                } else { // exception\n                    this.closeLoading();\n                    const res = !xmlHttp.responseText ? xmlHttp : JSON.parse(xmlHttp.responseText);\n                    if (typeof errorCallBack !== 'function' || errorCallBack('', res, this)) {\n                        const err = '[SUNEDITOR.fileManager.upload.serverException] status: ' + xmlHttp.status + ', response: ' + (res.errorMessage || xmlHttp.responseText);\n                        this.functions.noticeOpen(err);\n                        throw Error(err);\n                    }\n                }\n            }\n        },\n        \n        /**\n         * @description Checke the file's information and modify the tag that does not fit the format.\n         * @param {String} pluginName Plugin name\n         * @param {Array} tagNames Tag array to check\n         * @param {Function|null} uploadEventHandler Event handler to process updated file info after checking (used in \"setInfo\")\n         * @param {Function} modifyHandler A function to modify a tag that does not fit the format (Argument value: Tag element)\n         * @param {Boolean} resizing True if the plugin is using a resizing module\n         * @example \n         * const modifyHandler = function (tag) {\n         *      imagePlugin.onModifyMode.call(this, tag, null);\n         *      imagePlugin.openModify.call(this, true);\n         *      imagePlugin.update_image.call(this, true, false, true);\n         *  }.bind(this);\n         *  this.plugins.fileManager.checkInfo.call(this, 'image', ['img'], this.functions.onImageUpload, modifyHandler, true);\n         */\n        checkInfo: function (pluginName, tagNames, uploadEventHandler, modifyHandler, resizing) {\n            let tags = [];\n            for (let i = 0, len = tagNames.length; i < len; i++) {\n                tags = tags.concat([].slice.call(this.context.element.wysiwyg.getElementsByTagName(tagNames[i])));\n            }\n\n            const fileManagerPlugin = this.plugins.fileManager;\n            const context = this.context[pluginName];\n            const infoList = context._infoList;\n            const setFileInfo = fileManagerPlugin.setInfo.bind(this);\n\n            if (tags.length === infoList.length) {\n                // reset\n                if (this._componentsInfoReset) {\n                    for (let i = 0, len = tags.length; i < len; i++) {\n                        setFileInfo(pluginName, tags[i], uploadEventHandler, null, resizing);\n                    }\n                    return ;\n                } else {\n                    let infoUpdate = false;\n                    for (let i = 0, len = infoList.length, info; i < len; i++) {\n                        info = infoList[i];\n                        if (tags.filter(function (t) { return info.src === t.src && info.index.toString() === t.getAttribute('data-index'); }).length === 0) {\n                            infoUpdate = true;\n                            break;\n                        }\n                    }\n                    // pass\n                    if (!infoUpdate) return;\n                }\n            }\n\n            // check\n            const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n            if (resizing) this.context.resizing._resize_plugin = pluginName;\n            const currentTags = [];\n            const infoIndex = [];\n            for (let i = 0, len = infoList.length; i < len; i++) {\n                infoIndex[i] = infoList[i].index;\n            }\n            \n            for (let i = 0, len = tags.length, tag; i < len; i++) {\n                tag = tags[i];\n                if (!this.util.getParentElement(tag, this.util.isMediaComponent) || !fileManagerPlugin._checkMediaComponent(tag)) {\n                    currentTags.push(context._infoIndex);\n                    modifyHandler(tag);\n                } else if (!tag.getAttribute('data-index') || infoIndex.indexOf(tag.getAttribute('data-index') * 1) < 0) {\n                    currentTags.push(context._infoIndex);\n                    tag.removeAttribute('data-index');\n                    setFileInfo(pluginName, tag, uploadEventHandler, null, resizing);\n                } else {\n                    currentTags.push(tag.getAttribute('data-index') * 1);\n                }\n            }\n\n            for (let i = 0, dataIndex; i < infoList.length; i++) {\n                dataIndex = infoList[i].index;\n                if (currentTags.indexOf(dataIndex) > -1) continue;\n\n                infoList.splice(i, 1);\n                if (typeof uploadEventHandler === 'function') uploadEventHandler(null, dataIndex, 'delete', null, 0, this);\n                i--;\n            }\n\n            if (resizing) this.context.resizing._resize_plugin = _resize_plugin;\n        },\n\n        /**\n         * @description Create info object of file and add it to \"_infoList\" (this.context[pluginName]._infoList[])\n         * @param {String} pluginName Plugin name \n         * @param {Element} element \n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         * @param {Object|null} file \n         * @param {Boolean} resizing True if the plugin is using a resizing module\n         * @example \n         * uploadCallBack {.. file = { name: fileList[i].name, size: fileList[i].size };\n         * this.plugins.fileManager.setInfo.call(this, 'image', oImg, this.functions.onImageUpload, file, true);\n         */\n        setInfo: function (pluginName, element, uploadEventHandler, file, resizing) {\n            const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n            if (resizing) this.context.resizing._resize_plugin = pluginName;\n    \n            const plguin = this.plugins[pluginName];\n            const context = this.context[pluginName];\n            const infoList = context._infoList;\n            let dataIndex = element.getAttribute('data-index');\n            let info = null;\n            let state = '';\n\n            if (!file) {\n                file = {\n                    'name': element.getAttribute('data-file-name') || (typeof element.src === 'string' ? element.src.split('/').pop() : ''),\n                    'size': element.getAttribute('data-file-size') || 0\n                };\n            }\n    \n            // create\n            if (!dataIndex || this._componentsInfoInit) {\n                state = 'create';\n                dataIndex = context._infoIndex++;\n    \n                element.setAttribute('data-index', dataIndex);\n                element.setAttribute('data-file-name', file.name);\n                element.setAttribute('data-file-size', file.size);\n    \n                info = {\n                    src: element.src,\n                    index: dataIndex * 1,\n                    name: file.name,\n                    size: file.size\n                };\n    \n                infoList.push(info);\n            } else { // update\n                state = 'update';\n                dataIndex *= 1;\n    \n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    if (dataIndex === infoList[i].index) {\n                        info = infoList[i];\n                        break;\n                    }\n                }\n    \n                if (!info) {\n                    dataIndex = context._infoIndex++;\n                    info = { index: dataIndex };\n                    infoList.push(info);\n                }\n    \n                info.src = element.src;\n                info.name = element.getAttribute(\"data-file-name\");\n                info.size = element.getAttribute(\"data-file-size\") * 1;\n            }\n    \n            // method bind\n            info.element = element;\n            info.delete = plguin.destroy.bind(this, element);\n            info.select = function (element) {\n                element.scrollIntoView(true);\n                this._w.setTimeout(plguin.select.bind(this, element));\n            }.bind(this, element);\n    \n            if (resizing) {\n                if (!element.getAttribute('origin-size') && element.naturalWidth) {\n                    element.setAttribute('origin-size', element.naturalWidth + ',' + element.naturalHeight);\n                }\n    \n                if (!element.getAttribute('data-origin')) {\n                    const container = this.util.getParentElement(element, this.util.isMediaComponent);\n                    const cover = this.util.getParentElement(element, 'FIGURE');\n        \n                    const w = this.plugins.resizing._module_getSizeX.call(this, context, element, cover, container);\n                    const h = this.plugins.resizing._module_getSizeY.call(this, context, element, cover, container);\n                    element.setAttribute('data-origin', w + ',' + h);\n                    element.setAttribute('data-size', w + ',' + h);\n                }\n        \n                if (!element.style.width) {\n                    const size = (element.getAttribute('data-size') || element.getAttribute('data-origin') || '').split(',');\n                    plguin.onModifyMode.call(this, element, null);\n                    plguin.applySize.call(this, size[0], size[1]);\n                }\n        \n                this.context.resizing._resize_plugin = _resize_plugin;\n            }\n\n            if (typeof uploadEventHandler === 'function') uploadEventHandler(element, dataIndex, state, info, --context._uploadFileLength < 0 ? 0 : context._uploadFileLength, this);\n        },\n\n        /**\n         * @description Delete info object at \"_infoList\"\n         * @param {String} pluginName Plugin name \n         * @param {Number} index index of info object (this.context[pluginName]._infoList[].index)\n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         */\n        deleteInfo: function (pluginName, index, uploadEventHandler) {\n            if (index >= 0) {\n                const infoList = this.context[pluginName]._infoList;\n    \n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    if (index === infoList[i].index) {\n                        infoList.splice(i, 1);\n                        if (typeof uploadEventHandler === 'function') uploadEventHandler(null, index, 'delete', null, 0, this);\n                        return;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @description Reset info object and \"_infoList = []\", \"_infoIndex = 0\"\n         * @param {String} pluginName Plugin name \n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         */\n        resetInfo: function (pluginName, uploadEventHandler) {\n            const context = this.context[pluginName];\n\n            if (typeof uploadEventHandler === 'function') {\n                const infoList = context._infoList;\n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    uploadEventHandler(null, infoList[i].index, 'delete', null, 0, this);\n                }\n            }\n\n            context._infoList = [];\n            context._infoIndex = 0;\n        }\n    };\n\n    if (typeof noGlobal === typeof undefined) {\n        if (!window.SUNEDITOR_MODULES) {\n            Object.defineProperty(window, 'SUNEDITOR_MODULES', {\n                enumerable: true,\n                writable: false,\n                configurable: false,\n                value: {}\n            });\n        }\n\n        Object.defineProperty(window.SUNEDITOR_MODULES, 'fileManager', {\n            enumerable: true,\n            writable: false,\n            configurable: false,\n            value: fileManager\n        });\n    }\n\n    return fileManager;\n}));"]},"metadata":{},"sourceType":"script"}