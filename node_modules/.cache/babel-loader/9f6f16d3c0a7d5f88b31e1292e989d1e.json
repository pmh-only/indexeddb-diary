{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport fileBrowser from '../modules/fileBrowser';\nexport default {\n  name: 'imageGallery',\n\n  /**\n   * @description Constructor\n   * @param {Object} core Core object \n   */\n  add: function add(core) {\n    core.addModule([fileBrowser]);\n    var context = core.context;\n    context.imageGallery = {\n      title: core.lang.toolbar.imageGallery,\n      // @Required @Override fileBrowser - File browser window title.\n      url: core.options.imageGalleryUrl,\n      // @Required @Override fileBrowser - File server url.\n      header: core.options.imageGalleryHeader,\n      // @Required @Override fileBrowser - File server http header.\n      listClass: 'se-image-list',\n      // @Required @Override fileBrowser - Class name of list div.\n      itemTemplateHandler: this.drawItems,\n      // @Required @Override fileBrowser - Function that defines the HTML of an file item.\n      selectorHandler: this.setImage.bind(core),\n      // @Required @Override fileBrowser - Function that action when item click.\n      columnSize: 4 // @Option @Override fileBrowser - Number of \"div.se-file-item-column\" to be created (default: 4)\n\n    };\n  },\n\n  /**\n   * @Required @Override fileBrowser\n   * @description Open a file browser.\n   * @param {Function|null} selectorHandler When the function comes as an argument value, it substitutes \"context.selectorHandler\".\n   */\n  open: function open(selectorHandler) {\n    this.plugins.fileBrowser.open.call(this, 'imageGallery', selectorHandler);\n  },\n\n  /**\n   * @Required @Override fileBrowser\n   * @description Define the HTML of the item to be put in \"div.se-file-item-column\".\n   * Format: [\n   *      { src: \"image src\", name: \"name(@option)\", alt: \"image alt(@option)\", tag: \"tag name(@option)\" }\n   * ]\n   * @param {Object} item Item of the response data's array\n   */\n  drawItems: function drawItems(item) {\n    var srcName = item.src.split('/').pop();\n    return '<div class=\"se-file-item-img\"><img src=\"' + item.src + '\" alt=\"' + (item.alt || srcName) + '\" data-command=\"pick\">' + '<div class=\"se-file-img-name se-file-name-back\"></div>' + '<div class=\"se-file-img-name __se__img_name\">' + (item.name || srcName) + '</div>' + '</div>';\n  },\n  setImage: function setImage(target) {\n    this.callPlugin('image', function () {\n      var file = {\n        name: target.parentNode.querySelector('.__se__img_name').textContent,\n        size: 0\n      };\n      this.context.image._altText = target.alt;\n      this.plugins.image.create_image.call(this, target.src, null, this.context.image._origin_w, this.context.image._origin_h, 'none', file);\n    }.bind(this), null);\n  }\n};","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/fileBrowser/imageGallery.js"],"names":["fileBrowser","name","add","core","addModule","context","imageGallery","title","lang","toolbar","url","options","imageGalleryUrl","header","imageGalleryHeader","listClass","itemTemplateHandler","drawItems","selectorHandler","setImage","bind","columnSize","open","plugins","call","item","srcName","src","split","pop","alt","target","callPlugin","file","parentNode","querySelector","textContent","size","image","_altText","create_image","_origin_w","_origin_h"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,WAAP,MAAwB,wBAAxB;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,cADK;;AAEX;AACJ;AACA;AACA;AACIC,EAAAA,GAAG,EAAE,aAAUC,IAAV,EAAgB;AACjBA,IAAAA,IAAI,CAACC,SAAL,CAAe,CAACJ,WAAD,CAAf;AAEA,QAAMK,OAAO,GAAGF,IAAI,CAACE,OAArB;AACAA,IAAAA,OAAO,CAACC,YAAR,GAAuB;AACnBC,MAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAL,CAAUC,OAAV,CAAkBH,YADN;AACoB;AACvCI,MAAAA,GAAG,EAAEP,IAAI,CAACQ,OAAL,CAAaC,eAFC;AAEgB;AACnCC,MAAAA,MAAM,EAAEV,IAAI,CAACQ,OAAL,CAAaG,kBAHF;AAGsB;AACzCC,MAAAA,SAAS,EAAE,eAJQ;AAIS;AAC5BC,MAAAA,mBAAmB,EAAE,KAAKC,SALP;AAKkB;AACrCC,MAAAA,eAAe,EAAE,KAAKC,QAAL,CAAcC,IAAd,CAAmBjB,IAAnB,CANE;AAMwB;AAC3CkB,MAAAA,UAAU,EAAE,CAPO,CAOL;;AAPK,KAAvB;AASH,GAnBU;;AAqBX;AACJ;AACA;AACA;AACA;AACIC,EAAAA,IAAI,EAAE,cAAUJ,eAAV,EAA2B;AAC7B,SAAKK,OAAL,CAAavB,WAAb,CAAyBsB,IAAzB,CAA8BE,IAA9B,CAAmC,IAAnC,EAAyC,cAAzC,EAAyDN,eAAzD;AACH,GA5BU;;AA8BX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACID,EAAAA,SAAS,EAAE,mBAAUQ,IAAV,EAAgB;AACvB,QAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAhB;AACA,WAAQ,6CAA6CJ,IAAI,CAACE,GAAlD,GAAwD,SAAxD,IAAqEF,IAAI,CAACK,GAAL,IAAYJ,OAAjF,IAA4F,wBAA5F,GACI,wDADJ,GAEI,+CAFJ,IAEuDD,IAAI,CAACxB,IAAL,IAAayB,OAFpE,IAE+E,QAF/E,GAGA,QAHR;AAIH,GA5CU;AA8CXP,EAAAA,QAAQ,EAAE,kBAAUY,MAAV,EAAkB;AACxB,SAAKC,UAAL,CAAgB,OAAhB,EAAyB,YAAY;AACjC,UAAMC,IAAI,GAAG;AAAChC,QAAAA,IAAI,EAAE8B,MAAM,CAACG,UAAP,CAAkBC,aAAlB,CAAgC,iBAAhC,EAAmDC,WAA1D;AAAuEC,QAAAA,IAAI,EAAE;AAA7E,OAAb;AACA,WAAKhC,OAAL,CAAaiC,KAAb,CAAmBC,QAAnB,GAA8BR,MAAM,CAACD,GAArC;AACA,WAAKP,OAAL,CAAae,KAAb,CAAmBE,YAAnB,CAAgChB,IAAhC,CAAqC,IAArC,EAA2CO,MAAM,CAACJ,GAAlD,EAAuD,IAAvD,EAA6D,KAAKtB,OAAL,CAAaiC,KAAb,CAAmBG,SAAhF,EAA2F,KAAKpC,OAAL,CAAaiC,KAAb,CAAmBI,SAA9G,EAAyH,MAAzH,EAAiIT,IAAjI;AACH,KAJwB,CAIvBb,IAJuB,CAIlB,IAJkB,CAAzB,EAIc,IAJd;AAKH;AApDU,CAAf","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport fileBrowser from '../modules/fileBrowser';\n\nexport default {\n    name: 'imageGallery',\n    /**\n     * @description Constructor\n     * @param {Object} core Core object \n     */\n    add: function (core) {\n        core.addModule([fileBrowser]);\n\n        const context = core.context;\n        context.imageGallery = {\n            title: core.lang.toolbar.imageGallery, // @Required @Override fileBrowser - File browser window title.\n            url: core.options.imageGalleryUrl, // @Required @Override fileBrowser - File server url.\n            header: core.options.imageGalleryHeader, // @Required @Override fileBrowser - File server http header.\n            listClass: 'se-image-list', // @Required @Override fileBrowser - Class name of list div.\n            itemTemplateHandler: this.drawItems, // @Required @Override fileBrowser - Function that defines the HTML of an file item.\n            selectorHandler: this.setImage.bind(core), // @Required @Override fileBrowser - Function that action when item click.\n            columnSize: 4 // @Option @Override fileBrowser - Number of \"div.se-file-item-column\" to be created (default: 4)\n        };\n    },\n    \n    /**\n     * @Required @Override fileBrowser\n     * @description Open a file browser.\n     * @param {Function|null} selectorHandler When the function comes as an argument value, it substitutes \"context.selectorHandler\".\n     */\n    open: function (selectorHandler) {\n        this.plugins.fileBrowser.open.call(this, 'imageGallery', selectorHandler);\n    },\n\n    /**\n     * @Required @Override fileBrowser\n     * @description Define the HTML of the item to be put in \"div.se-file-item-column\".\n     * Format: [\n     *      { src: \"image src\", name: \"name(@option)\", alt: \"image alt(@option)\", tag: \"tag name(@option)\" }\n     * ]\n     * @param {Object} item Item of the response data's array\n     */\n    drawItems: function (item) {\n        const srcName = item.src.split('/').pop();\n        return  '<div class=\"se-file-item-img\"><img src=\"' + item.src + '\" alt=\"' + (item.alt || srcName) + '\" data-command=\"pick\">' +\n                    '<div class=\"se-file-img-name se-file-name-back\"></div>' +\n                    '<div class=\"se-file-img-name __se__img_name\">' + (item.name || srcName) + '</div>' +\n                '</div>';\n    },\n\n    setImage: function (target) {\n        this.callPlugin('image', function () {\n            const file = {name: target.parentNode.querySelector('.__se__img_name').textContent, size: 0};\n            this.context.image._altText = target.alt;\n            this.plugins.image.create_image.call(this, target.src, null, this.context.image._origin_w, this.context.image._origin_h, 'none', file);\n        }.bind(this), null);\n    }\n};"]},"metadata":{},"sourceType":"module"}