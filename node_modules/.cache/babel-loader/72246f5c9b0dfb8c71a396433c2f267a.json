{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'notice',\n\n  /**\n   * @description Constructor\n   * @param {Object} core Core object \n   */\n  add: function add(core) {\n    var context = core.context;\n    context.notice = {};\n    /** dialog */\n\n    var notice_div = core.util.createElement('DIV');\n    var notice_span = core.util.createElement('SPAN');\n    var notice_button = core.util.createElement('BUTTON');\n    notice_div.className = 'se-notice';\n    notice_button.className = 'close';\n    notice_button.setAttribute('aria-label', 'Close');\n    notice_button.setAttribute('title', core.lang.dialogBox.close);\n    notice_button.innerHTML = core.icons.cancel;\n    notice_div.appendChild(notice_span);\n    notice_div.appendChild(notice_button);\n    context.notice.modal = notice_div;\n    context.notice.message = notice_span;\n    /** add event listeners */\n\n    notice_button.addEventListener('click', this.onClick_cancel.bind(core));\n    /** append html */\n\n    context.element.editorArea.appendChild(notice_div);\n    /** empty memory */\n\n    notice_div = null;\n  },\n\n  /**\n   * @description Event when clicking the cancel button\n   * @param {MouseEvent} e Event object\n   */\n  onClick_cancel: function onClick_cancel(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.plugins.notice.close.call(this);\n  },\n\n  /**\n   * @description  Open the notice panel\n   * @param {String} text Notice message\n   */\n  open: function open(text) {\n    this.context.notice.message.textContent = text;\n    this.context.notice.modal.style.display = 'block';\n  },\n\n  /**\n   * @description  Open the notice panel\n   */\n  close: function close() {\n    this.context.notice.modal.style.display = 'none';\n  }\n};","map":{"version":3,"sources":["/github/workspace/node_modules/suneditor/src/plugins/modules/_notice.js"],"names":["name","add","core","context","notice","notice_div","util","createElement","notice_span","notice_button","className","setAttribute","lang","dialogBox","close","innerHTML","icons","cancel","appendChild","modal","message","addEventListener","onClick_cancel","bind","element","editorArea","e","preventDefault","stopPropagation","plugins","call","open","text","textContent","style","display"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACXA,EAAAA,IAAI,EAAE,QADK;;AAEX;AACJ;AACA;AACA;AACIC,EAAAA,GAAG,EAAE,aAAUC,IAAV,EAAgB;AACjB,QAAMC,OAAO,GAAGD,IAAI,CAACC,OAArB;AACAA,IAAAA,OAAO,CAACC,MAAR,GAAiB,EAAjB;AAEA;;AACA,QAAIC,UAAU,GAAGH,IAAI,CAACI,IAAL,CAAUC,aAAV,CAAwB,KAAxB,CAAjB;AACA,QAAIC,WAAW,GAAGN,IAAI,CAACI,IAAL,CAAUC,aAAV,CAAwB,MAAxB,CAAlB;AACA,QAAIE,aAAa,GAAGP,IAAI,CAACI,IAAL,CAAUC,aAAV,CAAwB,QAAxB,CAApB;AAEAF,IAAAA,UAAU,CAACK,SAAX,GAAuB,WAAvB;AACAD,IAAAA,aAAa,CAACC,SAAd,GAA0B,OAA1B;AACAD,IAAAA,aAAa,CAACE,YAAd,CAA2B,YAA3B,EAAyC,OAAzC;AACAF,IAAAA,aAAa,CAACE,YAAd,CAA2B,OAA3B,EAAoCT,IAAI,CAACU,IAAL,CAAUC,SAAV,CAAoBC,KAAxD;AACAL,IAAAA,aAAa,CAACM,SAAd,GAA0Bb,IAAI,CAACc,KAAL,CAAWC,MAArC;AAEAZ,IAAAA,UAAU,CAACa,WAAX,CAAuBV,WAAvB;AACAH,IAAAA,UAAU,CAACa,WAAX,CAAuBT,aAAvB;AAEAN,IAAAA,OAAO,CAACC,MAAR,CAAee,KAAf,GAAuBd,UAAvB;AACAF,IAAAA,OAAO,CAACC,MAAR,CAAegB,OAAf,GAAyBZ,WAAzB;AAEA;;AACAC,IAAAA,aAAa,CAACY,gBAAd,CAA+B,OAA/B,EAAwC,KAAKC,cAAL,CAAoBC,IAApB,CAAyBrB,IAAzB,CAAxC;AAEA;;AACAC,IAAAA,OAAO,CAACqB,OAAR,CAAgBC,UAAhB,CAA2BP,WAA3B,CAAuCb,UAAvC;AAEA;;AACAA,IAAAA,UAAU,GAAG,IAAb;AACH,GAnCU;;AAqCX;AACJ;AACA;AACA;AACIiB,EAAAA,cAAc,EAAE,wBAAUI,CAAV,EAAa;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACA,SAAKC,OAAL,CAAazB,MAAb,CAAoBU,KAApB,CAA0BgB,IAA1B,CAA+B,IAA/B;AACH,GA7CU;;AA+CX;AACJ;AACA;AACA;AACIC,EAAAA,IAAI,EAAE,cAAUC,IAAV,EAAiB;AACnB,SAAK7B,OAAL,CAAaC,MAAb,CAAoBgB,OAApB,CAA4Ba,WAA5B,GAA0CD,IAA1C;AACA,SAAK7B,OAAL,CAAaC,MAAb,CAAoBe,KAApB,CAA0Be,KAA1B,CAAgCC,OAAhC,GAA0C,OAA1C;AACH,GAtDU;;AAwDX;AACJ;AACA;AACIrB,EAAAA,KAAK,EAAE,iBAAY;AACf,SAAKX,OAAL,CAAaC,MAAb,CAAoBe,KAApB,CAA0Be,KAA1B,CAAgCC,OAAhC,GAA0C,MAA1C;AACH;AA7DU,CAAf","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'notice',\n    /**\n     * @description Constructor\n     * @param {Object} core Core object \n     */\n    add: function (core) {\n        const context = core.context;\n        context.notice = {};\n\n        /** dialog */\n        let notice_div = core.util.createElement('DIV');\n        let notice_span = core.util.createElement('SPAN');\n        let notice_button = core.util.createElement('BUTTON');\n\n        notice_div.className = 'se-notice';\n        notice_button.className = 'close';\n        notice_button.setAttribute('aria-label', 'Close');\n        notice_button.setAttribute('title', core.lang.dialogBox.close);\n        notice_button.innerHTML = core.icons.cancel;\n        \n        notice_div.appendChild(notice_span);\n        notice_div.appendChild(notice_button);\n\n        context.notice.modal = notice_div;\n        context.notice.message = notice_span;\n\n        /** add event listeners */\n        notice_button.addEventListener('click', this.onClick_cancel.bind(core));\n        \n        /** append html */\n        context.element.editorArea.appendChild(notice_div);\n        \n        /** empty memory */\n        notice_div = null;\n    },\n\n    /**\n     * @description Event when clicking the cancel button\n     * @param {MouseEvent} e Event object\n     */\n    onClick_cancel: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.plugins.notice.close.call(this);\n    },\n\n    /**\n     * @description  Open the notice panel\n     * @param {String} text Notice message\n     */\n    open: function (text)  {\n        this.context.notice.message.textContent = text;\n        this.context.notice.modal.style.display = 'block';\n    },\n\n    /**\n     * @description  Open the notice panel\n     */\n    close: function () {\n        this.context.notice.modal.style.display = 'none';\n    }\n};\n"]},"metadata":{},"sourceType":"module"}